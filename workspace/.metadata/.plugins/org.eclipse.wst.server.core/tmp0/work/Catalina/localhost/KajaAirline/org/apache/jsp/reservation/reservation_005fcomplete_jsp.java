/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2020-07-17 10:42:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.reservation;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reservation_005fcomplete_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1593517452000L));
    _jspx_dependants.put("jar:file:/D:/Java_Web_PM_Class_JB/project/Kaja_Airline_final/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/KajaAirline/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>결제 완료</title>\r\n");
      out.write("<style>\r\n");
      out.write("html, body {\r\n");
      out.write("   padding: 0px;\r\n");
      out.write("   border: 0px;\r\n");
      out.write("   margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header {\r\n");
      out.write("   width : 100%;\r\n");
      out.write("   padding: 0px;\r\n");
      out.write("   top : 0;\r\n");
      out.write("   position: fixed;\r\n");
      out.write("   background-color : white;\r\n");
      out.write("   height: auto;\r\n");
      out.write("   z-index: 90;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("section{\r\n");
      out.write("\r\n");
      out.write("   margin: 2%;\r\n");
      out.write("    margin-top: 13%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("footer {\r\n");
      out.write("   position : relative;\r\n");
      out.write("   width: 100%;\r\n");
      out.write("   height: 20%;\r\n");
      out.write("   z-index: 100;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title {\r\n");
      out.write("   text-align: center;\r\n");
      out.write("   margin: 35px;\r\n");
      out.write("   font-size: 26pt;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".subtitle {\r\n");
      out.write("   text-align: center;\r\n");
      out.write("   margin: 30px;\r\n");
      out.write("   font-size: 24pt;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button {\r\n");
      out.write("   font-size: 14pt;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\twindow.onload = function() {\r\n");
      out.write("\t\tshowSlides();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./header.jsp", out, false);
      out.write("\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("   <section id=\"sectionId\">\r\n");
      out.write("   <h1 class=\"title\">결제 완료</h1>\r\n");
      out.write("   \r\n");
      out.write("   <hr><br><br>\r\n");
      out.write("   \r\n");
      out.write("   <div align=\"center\">\r\n");
      out.write("      <h1 class=\"subtitle\">예매가 완료되었습니다.</h1>\r\n");
      out.write("      <h1 class=\"subtitle\">가자항공을 이용해 주셔서 감사합니다.</h1>\r\n");
      out.write("      \r\n");
      out.write("      - 국제선 탑승수속은 해당 항공편 출발 2시간 전부터 60분 전까지 입니다. <br>\r\n");
      out.write("      - 탑승객 본인의 신분증을 제시하시고, 탑승권을 발급 받으신 후 탑승하여 주시기 바랍니다. <br>\r\n");
      out.write("      - 항공편 일정은 정부인가 조건이며, 사전 예고 없이 변경 될 수 있습니다.\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("   <br><br>\r\n");
      out.write("   \r\n");
      out.write("   <div align=\"center\">\r\n");
      out.write("      <input class=\"button\" type=\"button\" value=\"나의 예매내역\" onclick=\"location.href='../reservation.mypage';\">\r\n");
      out.write("   </div>\r\n");
      out.write("   </section>\r\n");
      out.write("   \r\n");
      out.write("<footer>\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./footer.jsp", out, false);
      out.write("\r\n");
      out.write("</footer>\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
