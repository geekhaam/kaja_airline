/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2020-07-17 10:53:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import airfaqVO.AirFAQVO;
import java.util.ArrayList;
import airfaqDAO.AirFAQDAO;

public final class AllFAQ_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("airfaqDAO.AirFAQDAO");
    _jspx_imports_classes.add("airfaqVO.AirFAQVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("body{\r\n");
      out.write("\tbackground-image: url(\"./imgs/bg.jpg\");\r\n");
      out.write("}\r\n");
      out.write(".menu1 {\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tbackground-color: white;\r\n");
      out.write("\tfont-size: 15pt;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu2 {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tbackground-color: silver;\r\n");
      out.write("\tfont-size: 10pt;\r\n");
      out.write("}\r\n");
      out.write(".allfaqTable{\r\n");
      out.write("\twidth: 45%;\r\n");
      out.write("\tmargin-left: auto;\r\n");
      out.write("\tmargin-right: auto;\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("\t/* bada는 document.getElementById('somenu1')를 받음 */\r\n");
      out.write("\tfunction kaja(bada) { /* toggle방식은 항상 이런 방법으로 작성 */\r\n");
      out.write("\t\tif (bada.style.display == \"none\") {//숨어잇어\r\n");
      out.write("\t\t\tbada.style.display = \"block\"//show해\r\n");
      out.write("\t\t} else { //안숨어있다고!!!\r\n");
      out.write("\t\t\tbada.style.display = \"none\"//그럼숨어\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\twindow.onload=function(){\r\n");
      out.write("\t\tshowSlides();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\t");

			request.setCharacterEncoding("EUC-KR");
			AirFAQDAO afdao = new AirFAQDAO();
			
			int start = 1;
			int total =0;
			if (request.getParameter("start") != null) {
			   start = Integer.parseInt(request.getParameter("start"));
			}
			int startRow = (start - 1) * 10 + 1;
			int endRow = start * 10;
			
			total = afdao.getCount();
			ArrayList<AirFAQVO> aFAQArray = afdao.getAllFAQ(startRow, endRow);
		
      out.write("\r\n");
      out.write("\t<header>");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("</header>\r\n");
      out.write("\t<section id=\"sectionId\">\r\n");
      out.write("\t<form action=\"SearchFAQ.customerdo\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<h1 style=\"text-align: center;\">자주 찾는 질문</h1>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<br> <br>\r\n");
      out.write("\t\t<table class=\"allfaqTable\" border=0 >\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t<select name=\"Kategorie1\" style=\"font-size: 12pt;width: 25%;height: 30px;\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"회원관리\">회원관리</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"항공권\">항공권</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"기내\">기내</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"반려동물\">반려동물</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"수하물\">수하물</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: right;\"><input style=\"width: 30%;font-size: 12pt;\" type=\"submit\" value=\"검색\" /></td>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table class=\"allfaqTable\" border=\"1\">\r\n");
      out.write("\t\t\t");

				for (AirFAQVO imsi : aFAQArray) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu1\" id=\"bigmenu1\"\r\n");
      out.write("\t\t\t\t\t\tonclick=\"kaja(document.getElementById('");
      out.print(imsi.getqId() );
      out.write("'))\">\r\n");
      out.write("\t\t\t\t\t\t<span><img src=\"icon/question.png\" width=\"20\" id=\"question\" /></span>\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(imsi.getqQuestion());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<img src=\"icon/down_arrow.png\" width=\"20\" id=arrow align=\"right\" />\r\n");
      out.write("\t\t\t\t\t\t<!-- <hr> -->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu2\" id=");
      out.print(imsi.getqId() );
      out.write(" style=\"display: none\">\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(imsi.getqAnswer());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t<hr>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t");

						if (total > 0) {
							int pageCount = total / 10 + (total % 10 == 0 ? 0 : 1);
							System.out.println(total);
							int pageBlock = 5;
							int startPage = ((start - 1) / pageBlock) * pageBlock + 1;
							int endPage = startPage + pageBlock - 1;
							if (endPage > pageCount) {
								endPage = pageCount;
							}
							if (startPage > pageBlock) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<a href=\"AllFAQ.jsp?start=");
      out.print(startPage - 10);
      out.write("\">[이전]</a> \r\n");
      out.write("\t\t\t\t\t");

							}
							for (int i = startPage; i <= endPage; i++) {
								if (i == start) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t[");
      out.print(i);
      out.write("]\r\n");
      out.write("\t\t\t\t\t");

								} else {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<a href=\"AllFAQ.jsp?start=");
      out.print(i);
      out.write('"');
      out.write('>');
      out.write('[');
      out.print(i);
      out.write("]</a>\r\n");
      out.write("\t\t\t\t\t");

								}
							}
							if (endPage < pageCount) {
					
      out.write(" \r\n");
      out.write("\t\t\t\t\t\t<a href=\"AllFAQ.jsp?start=");
      out.print(startPage + 10);
      out.write("\">[다음]</a>\r\n");
      out.write("\t\t\t\t\t");

							}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<footer>");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
